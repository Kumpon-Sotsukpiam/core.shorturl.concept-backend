generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model domains {
//   id                           Int      @id @default(autoincrement())
//   // banned                            Boolean  @default(false)
//   // banned_by_id                      Int?
//   address                      String   @unique(map: "domains_address_unique") @db.VarChar(255)
//   homepage                     String?  @db.VarChar(255)
//   user_id                      Int?
//   uuid                         String   @default(uuid()) @db.Uuid
//   created_at                   DateTime @default(now()) @db.Timestamptz(6)
//   updated_at                   DateTime @default(now()) @db.Timestamptz(6)
//   // users_domains_banned_by_idTousers users?   @relation("domains_banned_by_idTousers", fields: [banned_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "domains_banned_by_id_foreign")
//   users_domains_user_idTousers users?   @relation("domains_user_idTousers", fields: [user_id], references: [id], onUpdate: NoAction, map: "domains_user_id_foreign")
//   links                        links[]
// }

// model hosts {
//   id         Int      @id @default(autoincrement())
//   address    String   @unique(map: "hosts_address_unique") @db.VarChar(255)
//   // banned       Boolean  @default(false)
//   // banned_by_id Int?
//   created_at DateTime @default(now()) @db.Timestamptz(6)
//   updated_at DateTime @default(now()) @db.Timestamptz(6)
//   // users      users?   @relation(fields: [banned_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "hosts_banned_by_id_foreign")
// }

model ips {
  id         Int      @id @default(autoincrement())
  ip         String   @unique(map: "ips_ip_unique") @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
}

// model knex_migrations {
//   id             Int       @id @default(autoincrement())
//   name           String?   @db.VarChar(255)
//   batch          Int?
//   migration_time DateTime? @db.Timestamptz(6)
// }

// model knex_migrations_lock {
//   index     Int  @id @default(autoincrement())
//   is_locked Int?
// }

model links {
  id                         Int       @id @default(autoincrement())
  address                    String    @db.VarChar(255)
  description                String?   @db.VarChar(255)
  // banned                          Boolean   @default(false)
  // banned_by_id                    Int?
  domain_id                  Int?
  password                   String?   @db.VarChar(255)
  expire_in                  DateTime? @db.Timestamptz(6)
  target                     String    @db.VarChar(2040)
  user_id                    Int?
  visit_count                Int       @default(0)
  created_at                 DateTime  @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime  @default(now()) @db.Timestamptz(6)
  uuid                       String    @default(uuid()) @db.Uuid
  // users_links_banned_by_idTousers users?    @relation("links_banned_by_idTousers", fields: [banned_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "links_banned_by_id_foreign")
  // domains                    domains?  @relation(fields: [domain_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "links_domain_id_foreign")
  users_links_user_idTousers users?    @relation("links_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "links_user_id_foreign")
  visits                     visits[]
}

model users {
  id                         Int      @id @default(autoincrement())
  apikey                     String?  @db.VarChar(255)
  // banned                              Boolean    @default(false)
  // banned_by_id                        Int?
  // cooldowns                           DateTime[] @db.Timestamptz
  email                      String   @unique(map: "users_email_unique") @db.VarChar(255)
  password                   String   @db.VarChar(255)
  // reset_password_expires              DateTime?  @db.Timestamptz(6)
  // reset_password_token                String?    @db.VarChar(255)
  // change_email_expires                DateTime?  @db.Timestamptz(6)
  // change_email_token                  String?    @db.VarChar(255)
  // change_email_address                String?    @db.VarChar(255)
  // verification_expires                DateTime?  @db.Timestamptz(6)
  // verification_token                  String?    @db.VarChar(255)
  // verified                            Boolean    @default(false)
  created_at                 DateTime @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime @default(now()) @db.Timestamptz(6)
  // users                               users?     @relation("usersTousers_banned_by_id", fields: [banned_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_banned_by_id_foreign")
  // domains_domains_banned_by_idTousers domains[]  @relation("domains_banned_by_idTousers")
  // domains_domains_user_idTousers domains[] @relation("domains_user_idTousers")
  // hosts                          hosts[]
  // links_links_banned_by_idTousers     links[]    @relation("links_banned_by_idTousers")
  links_links_user_idTousers links[]  @relation("links_user_idTousers")
  // other_users                         users[]    @relation("usersTousers_banned_by_id")
}

model visits {
  id         Int       @id @default(autoincrement())
  countries  String    @default("")
  referrers  String    @default("")
  link_id    Int
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  total      Int       @default(0)
  br_chrome  Int       @default(0)
  br_edge    Int       @default(0)
  br_firefox Int       @default(0)
  br_ie      Int       @default(0)
  br_opera   Int       @default(0)
  br_other   Int       @default(0)
  br_safari  Int       @default(0)
  os_android Int       @default(0)
  os_ios     Int       @default(0)
  os_linux   Int       @default(0)
  os_macos   Int       @default(0)
  os_other   Int       @default(0)
  os_windows Int       @default(0)
  links      links     @relation(fields: [link_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "visits_link_id_foreign")
}
